/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;


import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import sql.go;

/**
 *
 * @author Mohammad
 */
public class Sale extends javax.swing.JFrame {
    int deleteID = -1;
    int row;
    //double total;
    
    ArrayList Cname = new ArrayList();
    ArrayList Mname = new ArrayList();
    go g = new go();
    
    public Sale() {
        initComponents();
        
        DateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd"); //display your format.
        Date d = new Date();
        String formate = dateFormat.format(d);
        txtDate.setText(formate);
        
        tblInfo.getTableHeader().setReorderingAllowed(false);
        tblInfo.setDefaultEditor(Object.class, null);
        
        JTableHeader header = tblInfo.getTableHeader();
        header.setForeground(new Color(14,114,61));
        header.setFont(new Font("Tahoma" , Font.PLAIN , 16));
    }

    
    void getClientData()
    {
        Mname.clear();
        String sql1 = "SELECT Name FROM client";
        Cname = g.autoComplete(sql1);
    }
    void getMaterialData()
    {
        Cname.clear();
        String sql2 = "SELECT Name FROM material";
        Mname = g.autoComplete(sql2);
        
    }
    
    public  void setCellsAlignment(JTable table, int alignment)
    {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(alignment);

        TableModel tableModel = table.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++)
        {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }
    }
    
    void resetDate()
    {
        DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
        model.setNumRows(0);
        txtCName.setText("");
        lblCNamePrice.setText("");
        txtMName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtTotal.setText("0");
        txtPaidPrice.setText("");
        txtDebt.setText("0");
        txtCName.requestFocus();
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtCName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        btnSale = new javax.swing.JButton();
        btnAddClinet = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDebt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtMName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnEditInfo = new javax.swing.JButton();
        btnSaveInfo = new javax.swing.JButton();
        btnDeleteInfo = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cmbPercent = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtPaidPrice = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lblCNamePrice = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(14, 114, 61));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("البيع");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 70, 30));

        btnBack1.setBackground(new java.awt.Color(235, 235, 235));
        btnBack1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(14, 114, 61));
        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back.png"))); // NOI18N
        btnBack1.setText("الرجوع");
        btnBack1.setBorderPainted(false);
        btnBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack1.setFocusable(false);
        btnBack1.setIconTextGap(8);
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCName.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtCName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCNameFocusLost(evt);
            }
        });
        txtCName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCNameKeyReleased(evt);
            }
        });
        jPanel2.add(txtCName, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 170, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("اسم الزبون");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 70, 30));

        tblInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الكمية", "السعر", "اسم السلعة", "ت"
            }
        ));
        tblInfo.setFocusable(false);
        tblInfo.setRowHeight(26);
        tblInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInfo);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 1000, 280));

        btnSale.setBackground(new java.awt.Color(235, 235, 235));
        btnSale.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnSale.setForeground(new java.awt.Color(14, 114, 61));
        btnSale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/payment-method.png"))); // NOI18N
        btnSale.setText("بيع");
        btnSale.setBorderPainted(false);
        btnSale.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSale.setFocusable(false);
        btnSale.setIconTextGap(15);
        btnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleActionPerformed(evt);
            }
        });
        jPanel2.add(btnSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 170, 50));

        btnAddClinet.setBackground(new java.awt.Color(235, 235, 235));
        btnAddClinet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddClinet.setForeground(new java.awt.Color(14, 114, 61));
        btnAddClinet.setText("اضافة زبون");
        btnAddClinet.setBorderPainted(false);
        btnAddClinet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddClinet.setFocusable(false);
        btnAddClinet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClinetActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddClinet, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 120, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("المبلغ الكلي:");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 460, 100, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("الواصل");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, 60, 30));

        txtDebt.setEditable(false);
        txtDebt.setBackground(new java.awt.Color(251, 85, 85));
        txtDebt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDebt.setForeground(new java.awt.Color(255, 255, 255));
        txtDebt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDebt.setText("0");
        txtDebt.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel2.add(txtDebt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 160, 30));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("اسم المادة");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 70, 30));

        txtMName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMName.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtMName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMNameFocusLost(evt);
            }
        });
        txtMName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMNameKeyReleased(evt);
            }
        });
        jPanel3.add(txtMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 170, 30));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrice.setToolTipText("");
        txtPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPrice.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPriceFocusLost(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });
        jPanel3.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 170, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("الكمية");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 70, 30));

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantity.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantityKeyReleased(evt);
            }
        });
        jPanel3.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 170, 30));

        btnEditInfo.setBackground(new java.awt.Color(85, 85, 255));
        btnEditInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnEditInfo.setText("تعديل البيانات");
        btnEditInfo.setBorderPainted(false);
        btnEditInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo.setFocusable(false);
        btnEditInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfoActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 170, 30));

        btnSaveInfo.setBackground(new java.awt.Color(235, 235, 235));
        btnSaveInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSaveInfo.setForeground(new java.awt.Color(14, 114, 61));
        btnSaveInfo.setText("حفظ البيانات");
        btnSaveInfo.setBorderPainted(false);
        btnSaveInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveInfo.setFocusable(false);
        btnSaveInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveInfoActionPerformed(evt);
            }
        });
        jPanel3.add(btnSaveInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, 170, 30));

        btnDeleteInfo.setBackground(new java.awt.Color(251, 85, 85));
        btnDeleteInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteInfo.setText("حذف البيانات");
        btnDeleteInfo.setBorderPainted(false);
        btnDeleteInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteInfo.setFocusable(false);
        btnDeleteInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteInfoActionPerformed(evt);
            }
        });
        jPanel3.add(btnDeleteInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 170, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("السعر");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 70, 30));

        cmbPercent.setBackground(new java.awt.Color(254, 255, 255));
        cmbPercent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbPercent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "د.ع", "$" }));
        cmbPercent.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPercentItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 50, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1000, 100));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("الباقي");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 60, 30));

        txtPaidPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPaidPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPaidPrice.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtPaidPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidPriceFocusLost(evt);
            }
        });
        txtPaidPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaidPriceKeyReleased(evt);
            }
        });
        jPanel2.add(txtPaidPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 460, 170, 30));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(85, 217, 85));
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("0");
        txtTotal.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel2.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 460, 160, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("تاريخ البيع");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 70, 30));

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDate.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel2.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, 170, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("ديون الزبون :");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 80, 30));

        lblCNamePrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCNamePrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(lblCNamePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 147, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/left.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 460, 40, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1040, 530));

        setSize(new java.awt.Dimension(1040, 603));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        this.dispose();
        
        new MainForm().setVisible(true);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnAddClinetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClinetActionPerformed
        new AddClinet().setVisible(true);
    }//GEN-LAST:event_btnAddClinetActionPerformed

    private void btnSaveInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveInfoActionPerformed
        
        String material = txtMName.getText();
        String price = txtPrice.getText();
        String quantity = txtQuantity.getText();
        //System.out.println("here");
        double total = Double.parseDouble(txtTotal.getText().replace(",", ""));
        
        String sql1 = "SELECT ID, Price, Quantity FROM material WHERE Name ='" + material + "'";
        String[] materials = go.GetInformation(sql1, 3);
        String id = materials[0];
        
        
        if(id == null)
        {
            JOptionPane.showMessageDialog(null, "هذه السلعة غير موجوده");
            txtMName.setText("");
            txtMName.requestFocus();
            return;
        }
        
        if(material.equals("") || price.equals("") || quantity.equals(""))
        {
            JOptionPane.showMessageDialog(null, "الرجاء اكمال الحقول");
        }
        else
        {
           
            String quant = materials[2]; //quantity
            float qu = Float.parseFloat(quant);
            float Q = Float.parseFloat(quantity);
            if(qu < Q)
            {
                JOptionPane.showMessageDialog(null, "لديك من هذه السلعة "+ quant + " الرجاءتعبئة المخزن");
                txtQuantity.setText("");
                txtQuantity.requestFocus();
                return;
            }
            
            int mprice = Integer.parseInt(materials[1].replace(".0", ""));
            if(cmbPercent.getSelectedIndex() == 0)
            {
                String sql10 = "SELECT dollar FROM setting LIMIT 1";
                int dollar = Integer.parseInt(go.getData(sql10).replace(".0", "")); 
                mprice = mprice * dollar;
            }
            
            //int pp = Integer.parseInt(materials[1]); //price
            int P = Integer.parseInt(price.replace(",", ""));
            if(P < mprice)
            {
                int dialogResult = JOptionPane.showConfirmDialog(null, " سعر البيع اقل من السعر الاصلي " + mprice + " هل انت متأكد من البيع بهذا السعر" , "انتبه", JOptionPane.YES_NO_OPTION);
                if(dialogResult == 1)
                {
                    txtPrice.setText("");
                    txtPrice.requestFocus();
                    return;
                }
            }
                
            
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            
            String Price;
            if(cmbPercent.getSelectedIndex() == 0)
            {
                Price = price.concat(" د.ع");
            }
            else
            {
                Price = "$ ".concat(price);
            }
            int r = model.getRowCount();

            Object row[] = {quantity,Price,material,++r};
            model.addRow(row);
            setCellsAlignment(tblInfo, SwingConstants.CENTER);
            int q = 0;
            int p = 0;
            
            p = Integer.parseInt(model.getValueAt(r-1, 1).toString().replace(",", "").replace(" د.ع", "").replace("$ ", "")); //price
            q = Integer.parseInt(model.getValueAt(r-1, 0).toString()); //quantity

            total += q * p;
            
            String TotalWithOutE = String.format ("%,.0f", total); //حذف E 
            txtTotal.setText(String.valueOf(TotalWithOutE));
            
            txtMName.setText("");
            txtPrice.setText("");
            txtQuantity.setText("");
            txtMName.requestFocus();
        }
    }//GEN-LAST:event_btnSaveInfoActionPerformed

    private void btnDeleteInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteInfoActionPerformed
    
        if(deleteID == -1)
        {
            JOptionPane.showMessageDialog(null, "الرجاء تحديد العنصر المراد حذفه");
        }
        else
        {
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            int price = Integer.parseInt(model.getValueAt(row, 1).toString().replace(",", "").replace(" د.ع", "").replace("$ ", ""));
            int quant = Integer.parseInt(model.getValueAt(row, 0).toString());
            model.removeRow(row);
            tblInfo.setModel(model);
            
            int totalNum = Integer.parseInt(txtTotal.getText().replace(",", ""));
            float result = totalNum - price *quant;
            String TotalWithOutE = String.format ("%,.0f", result);
            
            txtMName.setText("");
            txtPrice.setText("");
            txtQuantity.setText("");
            txtMName.requestFocus();
            txtTotal.setText(TotalWithOutE);
            deleteID = -1;
            for (int i = 1; i <= model.getRowCount(); i++) 
            {
                model.setValueAt(i, i-1, 3);
            }
        }
        
    }//GEN-LAST:event_btnDeleteInfoActionPerformed

    private void txtCNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCNameFocusGained
        getClientData();
    }//GEN-LAST:event_txtCNameFocusGained

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        jPanel2.requestFocus();
        
        tblInfo.clearSelection();
            
        deleteID = -1;
    }//GEN-LAST:event_jPanel2MouseClicked

    private void txtCNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCNameKeyReleased
        if(!txtCName.getText().equals(""))
        {
            if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE)
            {

            }
            else
            {    
                String complete = "";
                String cname = txtCName.getText();
                int start = cname.length();
                int last = cname.length();

                for (int i = 0; i < Cname.size(); i++) 
                {
                    if(Cname.get(i).toString().startsWith(txtCName.getText()))
                    {
                        complete = Cname.get(i).toString();
                        last = complete.length();
                        break;
                    }
                }
                    //System.out.print(check_from_data);
                if(last > start)
                {
                    //System.out.print("Found");
                    txtCName.setText(complete);
                    txtCName.setCaretPosition(last);
                    txtCName.moveCaretPosition(start);
                }   
            } 
        }
    }//GEN-LAST:event_txtCNameKeyReleased

    private void txtMNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMNameFocusGained
        getMaterialData();
    }//GEN-LAST:event_txtMNameFocusGained

    private void txtMNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMNameKeyReleased
        if(!txtMName.getText().equals(""))
        {
            if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE)
            {

            }
            else
            {    
                String complete = "";
                String mname = txtMName.getText();
                int start = mname.length();
                int last = mname.length();

                for (int i = 0; i < Mname.size(); i++) 
                {
                    if(Mname.get(i).toString().startsWith(txtMName.getText()))
                    {
                        complete = Mname.get(i).toString();
                        last = complete.length();
                        break;
                    }
                }
                    //System.out.print(check_from_data);
                if(last > start)
                {
                    //System.out.print("Found");
                    txtMName.setText(complete);
                    txtMName.setCaretPosition(last);
                    txtMName.moveCaretPosition(start);
                }
            } 
        }
    }//GEN-LAST:event_txtMNameKeyReleased

    private void txtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusLost
        
        String quant = txtPrice.getText().replace(",", "");
        if(!quant.equals(""))
        {
            float quan = Float.parseFloat(quant);
            String comma = String.format ("%,.0f", quan);
            txtPrice.setText(comma);
        }
    }//GEN-LAST:event_txtPriceFocusLost

    private void btnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleActionPerformed
 
        String client = txtCName.getText();
        
        String sql1 = "SELECT ID, Address,Debt,Currency FROM client where Name = '" + client + "'";
        String[] clients = go.GetInformation(sql1, 4);
        String CID = clients[0];
        String address = clients[1];
        String CDebt = clients[2];
        String Ccurrency = clients[3];
        
        if(CID == null || client.equals(""))
        {
            JOptionPane.showMessageDialog(null, "اسم الزبون غير موجود الرجاء اضافته");
            txtCName.setText("");
            return;
        }
        
        String date = txtDate.getText();
        
        String paid = txtPaidPrice.getText().replace(",", "");
       
        String totalPrint = txtTotal.getText();
        int t = Integer.parseInt(totalPrint.replace(",", "")); // total price السعر الكلي
        int p = Integer.parseInt(paid); // paid السعر المدفوع
        int d = Integer.parseInt(txtDebt.getText().replace(",", "")); // debt الباقي
        
        String sql11 = "SELECT dollar FROM setting LIMIT 1";
        int dollar = Integer.parseInt(go.getData(sql11).replace(".0", ""));
        String currency = cmbPercent.getSelectedItem().toString();
        
        String paidreport=txtPaidPrice.getText();
        String debtreport=txtDebt.getText();
        
        if(paid.equals(""))
        {
            JOptionPane.showMessageDialog(null, "الرجاء ملئ حقل الواصل");
        }
        else
        {
            if(d<0)
            {
                JOptionPane.showMessageDialog(null, "قيمة الباقي غير صحيحة");
                return;
            }
            {
                String sql2 = "SELECT max(ID)+1 FROM export";
                String exportID = go.getData(sql2);
                if(exportID == null)
                {
                    exportID = "1";
                }

                DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
                int r = model.getRowCount();
                Object data[];
                int priceData;
                for (int i = 0; i < r; i++) 
                {
                    data = new Object[4];
                    for (int j = 0; j < 4; j++) 
                    {
                        data[j] = model.getValueAt(i, j);
                    }
                    
                    priceData = Integer.parseInt(data[1].toString().replace(",", "").replace(" د.ع", "").replace("$ ", ""));
                    
                    String sql3 = "SELECT ID FROM material where Name = '" + data[2] + "'";
                    String MID = go.getData(sql3);

                    String sql4 = "INSERT INTO exportitem(exportID,MateriaID,Price,Quantity) VALUES "
                        + "('"+ exportID + "','" + MID + "','" + priceData + "','" + data[0] + "')";
                    g.query(sql4);

                    String sql5 = "UPDATE material SET Quantity = Quantity -'" + data[0] + "' WHERE ID ='" + MID +"'";
                    g.query(sql5);

                    String sql6 = "INSERT INTO sellprocess(Num , MName, Price, Quantity) VALUES "
                    + "('" + data[3] + "','" + data[2] + "','" + priceData + "','" +data[0]+ "')";
                    g.query(sql6);
                }
                
                //الاضافة في جدول الواردات
                String sql6 = "INSERT INTO export(ClientID , TotalPrice, PaidPrice, Debt, Date, Currency) VALUES "
                    + "('" + CID + "','" + t + "','" + p + "','" + d + "','" + date + "','" + currency + "')";
                g.query(sql6);
                
                
                int cd = 0;
                if(Ccurrency.equals(currency))
                {
                    cd = Integer.parseInt(CDebt);
                    d = d + cd;
                }
                else
                {
                    if(Ccurrency.equals("$"))
                    {
                        cd = Integer.parseInt(CDebt);
                        d = (cd * dollar) + d;
                    }
                    else
                    {
                        cd = Integer.parseInt(CDebt);
                        d =  (cd / dollar) + d;
                    }
                    
                }
                
                //اضافة الديون للزبون
                String sql7 = "UPDATE client SET Debt ='" + d + "', Currency = '" + currency + "' WHERE ID ='" + CID +"'";
                g.query(sql7);

                JOptionPane.showMessageDialog(null, "تمت العملية بنجاح");

                resetDate(); 
                
                
                try 
                { 
                    
                    JasperReport jr = JasperCompileManager.compileReport(new File("").getAbsoluteFile()+"/src/IReports/fathilReport.jrxml");

                    //JRDataSource datasource = new JREmptyDataSource();

                    Map<String, Object> parameters = new HashMap<String, Object>();

                    parameters.put("CName", client);
                    parameters.put("sellID" , exportID);
                    parameters.put("Address", address);
                    
                    if(cmbPercent.getSelectedIndex() == 0)
                    {
                        parameters.put("Paid", paidreport + " د.ع");
                        parameters.put("Debt", debtreport + " د.ع");
                        parameters.put("Total",  totalPrint + " د.ع");
                    }
                    else
                    {
                        parameters.put("Total", "$ "+ totalPrint);
                        parameters.put("Paid", "$ "+ paidreport);
                        parameters.put("Debt", "$ "+ debtreport);
                        
                    }
                    

                    JasperPrint jp = JasperFillManager.fillReport(jr,parameters, go.getConnection());
                    //JasperExportManager.exportReportToPdfFile(jp,"C:\\Users\\Mohammad\\Desktop\\test.pdf");

                    JasperViewer.viewReport(jp , false);
                } catch (JRException ex) {
                    System.out.println(ex.getMessage());
                }

                String sql = "TRUNCATE sellprocess";
                g.query(sql);
            }
        }
    }//GEN-LAST:event_btnSaleActionPerformed

    private void tblInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInfoMouseClicked
        
        if(tblInfo.getSelectedRow() != -1)
        { 
            row = tblInfo.getSelectedRow();
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            deleteID = row + 1;
            String quantity = model.getValueAt(row, 0).toString();
            String price = model.getValueAt(row, 1).toString();
            String MName = tblInfo.getValueAt(row, 2).toString();

            txtMName.setText(MName);
            if(price.contains(" د.ع"))
            {
                cmbPercent.setSelectedIndex(0);
            }
            else
            {
                cmbPercent.setSelectedIndex(1);
            }
            price = price.replace(" د.ع", "").replace("$ ", "");
            txtPrice.setText(price);
            txtQuantity.setText(quantity);  
        }
        else
        {
            deleteID = -1;
        }
    }//GEN-LAST:event_tblInfoMouseClicked

    private void txtPaidPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidPriceKeyReleased
        String p = txtPaidPrice.getText().replace(",", "");
        if(!p.equals(""))
        {
            if(!Character.isDigit(p.charAt(p.length()-1)))
            {
                txtPaidPrice.setText(""+txtPaidPrice.getText().substring(0, txtPaidPrice.getText().length()- 1));
                return;
            }
            if(!Character.isDigit(p.charAt(0)))
            {
                txtPaidPrice.setText(""+txtPaidPrice.getText().substring(1));
                return;
            }
            
            float paid = Float.parseFloat(p);
            double debt = 0;
            double total = Double.parseDouble(txtTotal.getText().replace(",", ""));
            if(txtPaidPrice.getText().equals("0"))
            {
                debt = total;
            }
            else
            {
                debt = total - paid;
            }

            String d = String.format ("%,.0f", debt); //حذف E 
            txtDebt.setText(String.valueOf(d));
        }
        else
        {
            txtDebt.setText("0");
        }
    }//GEN-LAST:event_txtPaidPriceKeyReleased

    private void txtPaidPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidPriceFocusLost
        String paid = txtPaidPrice.getText().replace(",", "");
        
        if(!paid.equals(""))
        {           
            float quan = Float.parseFloat(paid);
            String comma = String.format ("%,.0f", quan);
            txtPaidPrice.setText(comma);
        }
    }//GEN-LAST:event_txtPaidPriceFocusLost

    private void txtMNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMNameFocusLost
        String name = txtMName.getText();
        if(!name.equals(""))
        {
            String sql = "SELECT ID, Price, Quantity FROM material WHERE Name ='" + name + "'";
            String[] info = go.GetInformation(sql, 3);
            String id = info[0];
            String price = info[1];
            String quantity = info[2];

            
            if(id == null)
            {
                JOptionPane.showMessageDialog(null, "هذه السلعة غير موجوده");
                txtMName.setText("");
                txtMName.requestFocus();
                return;
            }
            
            float quant = Float.parseFloat(quantity);
            if(quant == 0)
            {
                JOptionPane.showMessageDialog(null, "هذه السلعة نفذت من المخزن");
                txtMName.setText("");
                txtMName.requestFocus();
                return;
            }
            
            if(price.equals(""))
            {
                JOptionPane.showMessageDialog(null, "هذه السلعة غير موجودة");
                txtMName.setText("");
                txtMName.requestFocus();
            }
            else
            {
                String sql1 = "SELECT Percent,dollar FROM setting LIMIT 1";
                String[] settng = go.GetInformation(sql1, 2);
                String percent = settng[0];
                String dollar = settng[1];
                
                float Price = Float.parseFloat(price);
                float Percent = Float.parseFloat(percent);
                float result = (100 + Percent) * (Price / 100);
                
                if(cmbPercent.getSelectedIndex() == 0)
                {
                    float Dolar = Float.parseFloat(dollar);
                    result = result * Dolar;
                }
                
                String comma = String.format ("%,.0f", result);
                txtPrice.setText(comma);
            }
            
        }
    }//GEN-LAST:event_txtMNameFocusLost

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        String text = txtPrice.getText();
        if(!text.equals(""))
        {
            if(!Character.isDigit(text.charAt(text.length()-1)))
            {
                txtPrice.setText(""+text.substring(0, text.length()- 1));
                return;
            }
            if(!Character.isDigit(text.charAt(0)))
            {
                txtPrice.setText(""+text.substring(1));
            }
        }
    }//GEN-LAST:event_txtPriceKeyReleased

    private void txtQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyReleased
        String text = txtQuantity.getText();
        if(!text.equals(""))
        {
            if(!Character.isDigit(text.charAt(text.length()-1)))
            {
                txtQuantity.setText(""+text.substring(0, text.length()- 1));
                return;
            }
            if(!Character.isDigit(text.charAt(0)))
            {
                txtQuantity.setText(""+text.substring(1));
            }
        }
    }//GEN-LAST:event_txtQuantityKeyReleased

    private void btnEditInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfoActionPerformed
        if(deleteID == -1)
        {
            JOptionPane.showMessageDialog(null, "الرجاء تحديد العنصر المراد تعديله");
        }
        else
        {
            String material = txtMName.getText();
            String price = txtPrice.getText();
            String quantity = txtQuantity.getText();

            if(material.equals("") || price.equals("") || quantity.equals(""))
            {
                JOptionPane.showMessageDialog(null, "الرجاء اكمال الحقول");
            }
            else
            {
                String sql = "SELECT ID,Quantity,Price FROM material where Name = '" + material + "'";
                String[] info = go.GetInformation(sql, 3);
                String id = info[0];
                

                if(id == null)
                {
                    JOptionPane.showMessageDialog(null, "هذه السلعة غير موجوده");
                    txtMName.setText("");
                    return;
                }

                String quant = info[1];
                float qu = Float.parseFloat(quant);
                float Q = Float.parseFloat(quantity);
                if(qu < Q)
                {
                    JOptionPane.showMessageDialog(null, "لديك من هذه السلعة "+ quant + " الرجاءتعبئة المخزن");
                    txtQuantity.setText("");
                    txtQuantity.requestFocus();
                    return;
                }
                
                int mprice = Integer.parseInt(info[2].replace(".0", ""));
                if(cmbPercent.getSelectedIndex() == 0)
                {
                    String sql10 = "SELECT dollar FROM setting LIMIT 1";
                    int dollar = Integer.parseInt(go.getData(sql10).replace(".0", "")); 
                    mprice = mprice * dollar;
                }

                //int pp = Integer.parseInt(materials[1]); //price
                int P = Integer.parseInt(price.replace(",", ""));
                if(P < mprice)
                {
                    int dialogResult = JOptionPane.showConfirmDialog(null, " سعر البيع اقل من السعر الاصلي " + mprice + " هل انت متأكد من البيع بهذا السعر" , "انتبه", JOptionPane.YES_NO_OPTION);
                    if(dialogResult == 1)
                    {
                        txtPrice.setText("");
                        txtPrice.requestFocus();
                        return;
                    }
                }
                
                DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
                String number = model.getValueAt(row, 3).toString();
                
                //Object row[] = {,txtPrice.getText(),txtMName.getText(),number};
                model.setValueAt(quantity, row, 0);
                if(cmbPercent.getSelectedIndex() == 0)
                {
                    model.setValueAt(price.concat(" د.ع"), row, 1);
                }
                else
                {
                    model.setValueAt("$ ".concat(price), row, 1);
                }
                model.setValueAt(material, row, 2);
                model.setValueAt(number, row, 3);
                tblInfo.setModel(model);
                
                int p = 0;
                int q = 0;
                float result = 0;
                for (int i = 0; i < tblInfo.getRowCount(); i++) {
                    q = Integer.parseInt(model.getValueAt(i, 0).toString()); //الكمية
                    p = Integer.parseInt(model.getValueAt(i, 1).toString().replace(",", "").replace(" د.ع", "").replace("$ ", "")); //السعر من الجدول
                    result += q * p;
                }
                String TotalWithOutE = String.format ("%,.0f", result);
                txtTotal.setText(TotalWithOutE);
                
                txtMName.setText("");
                txtPrice.setText("");
                txtQuantity.setText("");
                txtMName.requestFocus();
                tblInfo.clearSelection();

                deleteID = -1;
            }
        }
    }//GEN-LAST:event_btnEditInfoActionPerformed

    private void txtCNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCNameFocusLost
        String name = txtCName.getText();
        if(!name.equals(""))
        {
            String sql = "SELECT ID,Debt,Currency FROM client WHERE Name = '" + name + "'";
            String clientInfo[] = go.GetInformation(sql,3);
            
            Object id = (Object)clientInfo[0];
            
            if(id == null)
            {
                JOptionPane.showMessageDialog(null, "اسم الزبون غير موجود");
                txtCName.setText("");
                txtCName.requestFocus();
            }
            else
            {
                String price = clientInfo[1];
                String currency = clientInfo[2];
                float Price = Float.parseFloat(price);
                
                if(currency.equals(""))
                {
                    String comma = String.format ("%,.0f", Price);
                    lblCNamePrice.setText(comma);
                }
                else
                {
                    String comma = String.format ("%,.0f", Price);
                    if(currency.equals("د.ع"))
                    {
                        lblCNamePrice.setText(comma + " د.ع");
                    }
                    else
                    {
                        lblCNamePrice.setText("$ " + comma);
                    }
                    
                    cmbPercent.setSelectedItem(currency);
                }
            }
        }
    }//GEN-LAST:event_txtCNameFocusLost

    private void cmbPercentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPercentItemStateChanged
        String mprice = ""; //سعر السلعة بالعراقي
        float Price = 0;
        String name = txtMName.getText();
        String Cname = txtCName.getText();
        
        if(!name.equals(""))
        {
            String sql = "SELECT Price FROM material WHERE Name ='" + name + "'";
            mprice = go.getData(sql);
            Price = Float.parseFloat(mprice);
        }
        
        String txtprice = txtPrice.getText();
        if(!txtprice.equals(""))
        {
            String sql1 = "SELECT Percent,dollar FROM setting LIMIT 1";
            String[] settng = go.GetInformation(sql1, 2);
            String percent = settng[0];
            String dollar = settng[1];
            
            float Percent = Float.parseFloat(percent);
            float Dolar = Float.parseFloat(dollar.replace(".0", ""));
            
            float result = (100 + Percent) * (Price / 100);
            
            
            if(cmbPercent.getSelectedIndex() == 0)
            {
                result = result * Dolar;
            }
            
            String comma = String.format ("%,.0f", result);  
            txtPrice.setText(comma);
        }
    }//GEN-LAST:event_cmbPercentItemStateChanged

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        
        String total = txtTotal.getText().replace(",", "");
        
        if(!total.equals("0"))
        {
            txtPaidPrice.setText(total);
            txtDebt.setText("0");
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddClinet;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnDeleteInfo;
    private javax.swing.JButton btnEditInfo;
    private javax.swing.JButton btnSale;
    private javax.swing.JButton btnSaveInfo;
    private javax.swing.JComboBox<String> cmbPercent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCNamePrice;
    private javax.swing.JTable tblInfo;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDebt;
    private javax.swing.JTextField txtMName;
    private javax.swing.JTextField txtPaidPrice;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
