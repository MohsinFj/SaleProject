/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;


import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import sql.go;

/**
 *
 * @author Mohammad
 */
public class Buy extends javax.swing.JFrame {

    String MID,PID,date;
    int counter = 0;
    //double total;
    int deleteID = -1;
    int row;
    ArrayList Pname = new ArrayList();
    ArrayList Mname = new ArrayList();
    go g = new go();
    
    public Buy() {
        initComponents();
        
        DateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd"); //display your format.
        Date d = new Date();
        String formate = dateFormat.format(d);
        txtDate.setText(formate);
        
        tblInfo.getTableHeader().setReorderingAllowed(false);
        tblInfo.setDefaultEditor(Object.class, null);
        JTableHeader header = tblInfo.getTableHeader();
        header.setForeground(new Color(14,114,61));
        header.setFont(new Font("Tahoma" , Font.PLAIN , 16));
        
        fillComboBox();
        cmbWarehouse.removeAllItems();
        String sql = "SELECT * FROM warehouse";
        g.fillCombo(cmbWarehouse,sql);
    }

    public  void setCellsAlignment(JTable table, int alignment)
    {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(alignment);

        TableModel tableModel = table.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++)
        {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }
    }
    
    public void fillComboBox()
    {
        cmbGrop.removeAllItems();
        String sql = "SELECT * FROM grop";
        g.fillCombo(cmbGrop,sql);
    }
    
    void getProviderData()
    {
        Mname.clear();
        String sql1 = "SELECT Name FROM provider";
        Pname = g.autoComplete(sql1);
    }
    void getMaterialData()
    {
        Pname.clear();
        String sql2 = "SELECT Name FROM material";
        Mname = g.autoComplete(sql2);
    }
    
    void resetDate()
    {
        DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
        model.setNumRows(0);
        counter = 0;
        txtPName.setText("");
        txtMName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtTotal.setText("0");
        txtPaidPrice.setText("");
        txtDebt.setText("0");
        txtPName.requestFocus();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtMName = new javax.swing.JTextField();
        cmbGrop = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtGuarantee = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnAddInfo = new javax.swing.JButton();
        btnDeleteInfo = new javax.swing.JButton();
        btnEditInfo = new javax.swing.JButton();
        cmbWarehouse = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        btnAddWarehouse = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtPName = new javax.swing.JTextField();
        btnBuy = new javax.swing.JButton();
        txtPaidPrice = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnBack4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        txtDebt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(14, 114, 61));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("الشراء");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 70, 30));

        btnBack3.setBackground(new java.awt.Color(235, 235, 235));
        btnBack3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnBack3.setForeground(new java.awt.Color(14, 114, 61));
        btnBack3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back.png"))); // NOI18N
        btnBack3.setText("الرجوع");
        btnBack3.setBorderPainted(false);
        btnBack3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack3.setFocusable(false);
        btnBack3.setIconTextGap(8);
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("اسم السلعة");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, 80, 30));

        txtMName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMName.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtMName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMNameFocusLost(evt);
            }
        });
        txtMName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMNameKeyReleased(evt);
            }
        });
        jPanel2.add(txtMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 170, 30));

        cmbGrop.setBackground(new java.awt.Color(254, 255, 255));
        cmbGrop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbGrop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbGropFocusGained(evt);
            }
        });
        jPanel2.add(cmbGrop, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 110, 30));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("النوع");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 30, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("الضمان");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 50, 40, 30));

        txtGuarantee.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtGuarantee.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGuarantee.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel2.add(txtGuarantee, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 170, 30));

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQuantity.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantityKeyReleased(evt);
            }
        });
        jPanel2.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("الكمية");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 40, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("السعر");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 50, 30));

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrice.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPriceFocusLost(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });
        jPanel2.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 120, 30));

        btnAddInfo.setBackground(new java.awt.Color(235, 235, 235));
        btnAddInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddInfo.setForeground(new java.awt.Color(14, 114, 61));
        btnAddInfo.setText("اضافة");
        btnAddInfo.setBorderPainted(false);
        btnAddInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddInfo.setFocusable(false);
        btnAddInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInfoActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 120, 30));

        btnDeleteInfo.setBackground(new java.awt.Color(251, 85, 85));
        btnDeleteInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteInfo.setText("حذف");
        btnDeleteInfo.setBorderPainted(false);
        btnDeleteInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteInfo.setFocusable(false);
        btnDeleteInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteInfoActionPerformed(evt);
            }
        });
        jPanel2.add(btnDeleteInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 120, 30));

        btnEditInfo.setBackground(new java.awt.Color(85, 85, 255));
        btnEditInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnEditInfo.setText("تعديل");
        btnEditInfo.setBorderPainted(false);
        btnEditInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditInfo.setFocusable(false);
        btnEditInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditInfoActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 30));

        cmbWarehouse.setBackground(new java.awt.Color(254, 255, 255));
        cmbWarehouse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbWarehouse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbWarehouseFocusGained(evt);
            }
        });
        jPanel2.add(cmbWarehouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 110, 30));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("المخزن");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 50, 30));

        btnAddWarehouse.setBackground(new java.awt.Color(235, 235, 235));
        btnAddWarehouse.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnAddWarehouse.setForeground(new java.awt.Color(14, 114, 61));
        btnAddWarehouse.setText("+");
        btnAddWarehouse.setBorderPainted(false);
        btnAddWarehouse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddWarehouse.setFocusable(false);
        btnAddWarehouse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddWarehouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWarehouseActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddWarehouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 60, 30));

        btnBack1.setBackground(new java.awt.Color(235, 235, 235));
        btnBack1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(14, 114, 61));
        btnBack1.setText("+");
        btnBack1.setBorderPainted(false);
        btnBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack1.setFocusable(false);
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 60, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("$");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 10, 30));

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1000, 90));

        txtPName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPName.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtPName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPNameFocusLost(evt);
            }
        });
        txtPName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPNameKeyReleased(evt);
            }
        });
        jPanel3.add(txtPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 220, 30));

        btnBuy.setBackground(new java.awt.Color(235, 235, 235));
        btnBuy.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnBuy.setForeground(new java.awt.Color(14, 114, 61));
        btnBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-to-cart.png"))); // NOI18N
        btnBuy.setText("شراء");
        btnBuy.setBorderPainted(false);
        btnBuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuy.setFocusable(false);
        btnBuy.setIconTextGap(10);
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        jPanel3.add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 170, 50));

        txtPaidPrice.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPaidPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPaidPrice.setMargin(new java.awt.Insets(2, 2, 2, 5));
        txtPaidPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidPriceFocusLost(evt);
            }
        });
        txtPaidPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaidPriceKeyReleased(evt);
            }
        });
        jPanel3.add(txtPaidPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, 170, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("الواصل:");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 470, 50, 30));

        btnBack4.setBackground(new java.awt.Color(235, 235, 235));
        btnBack4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack4.setForeground(new java.awt.Color(14, 114, 61));
        btnBack4.setText("اضافة مزود");
        btnBack4.setBorderPainted(false);
        btnBack4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack4.setFocusable(false);
        btnBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack4ActionPerformed(evt);
            }
        });
        jPanel3.add(btnBack4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 170, 30));

        tblInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "المخزن", "الضمان", "السعر", "الكمية", "النوع", "اسم السلعة", "ت"
            }
        ));
        tblInfo.setFocusable(false);
        tblInfo.setRowHeight(26);
        tblInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInfo);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1000, 300));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("المبلغ الكلي:");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 470, 100, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("اسم المزود");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 70, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("تاريخ الشراء");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 70, 30));

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDate.setToolTipText("");
        txtDate.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel3.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 190, 30));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(85, 217, 85));
        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("0");
        txtTotal.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel3.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 470, 160, 30));

        txtDebt.setEditable(false);
        txtDebt.setBackground(new java.awt.Color(251, 85, 85));
        txtDebt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDebt.setForeground(new java.awt.Color(255, 255, 255));
        txtDebt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDebt.setText("0");
        txtDebt.setMargin(new java.awt.Insets(2, 2, 2, 5));
        jPanel3.add(txtDebt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, 160, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("الباقي:");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, -1, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1040, 530));

        setSize(new java.awt.Dimension(1040, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        this.dispose();
        
        new MainForm().setVisible(true);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack4ActionPerformed
        new AddProvider().setVisible(true);
    }//GEN-LAST:event_btnBack4ActionPerformed

    private void btnAddInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInfoActionPerformed

        String material = txtMName.getText();
        String quantity = txtQuantity.getText();
        String price = txtPrice.getText();
        String grop = cmbGrop.getSelectedItem().toString();
        String guarentee = txtGuarantee.getText();
        String warehouse = (String) cmbWarehouse.getSelectedItem();
        
        double total = Double.parseDouble(txtTotal.getText().replace(",", ""));
        
        
//        String sql1 = "SELECT ID FROM material where Name = '" + material + "'";
//        String MID = g.getData(sql1);
//        
//        if(MID.equals(""))
//        {
//            JOptionPane.showMessageDialog(null, "هذه السلعة غير موجوده الرجاء اضافتها");
//            txtMName.setText("");
//            return;
//        }
        
        if(material.equals("") || quantity.equals("") || price.equals(""))
        {
            JOptionPane.showMessageDialog(null, "الرجاء اكمال الحقول");
        }
        else
        {
            counter++;
            //String newStr = liveprice.replace("$", "").replace(",", "");
            
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            
            Object row[] = {warehouse,guarentee,"$ ".concat(price),quantity,grop,material,counter};
            model.addRow(row);
            setCellsAlignment(tblInfo, SwingConstants.CENTER);
            
            int r = model.getRowCount();
            int q = 0;
            int p = 0;
            
            p = Integer.parseInt(model.getValueAt(r-1, 2).toString().replace(",", "").replace("$ ", "")); //price
            q = Integer.parseInt(model.getValueAt(r-1, 3).toString()); //quantity

            total += q * p;
            
            
            txtTotal.setText(String.valueOf(total));
            String TotalWithOutE = String.format ("%,.0f", total); //حذف E 
            txtTotal.setText(String.valueOf(TotalWithOutE));
            
            txtMName.setText("");
            txtQuantity.setText("");
            txtPrice.setText("");
            cmbGrop.setSelectedIndex(0);
            txtGuarantee.setText("");
            cmbWarehouse.setSelectedIndex(0);
            txtMName.requestFocus();
        }
         
    }//GEN-LAST:event_btnAddInfoActionPerformed

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        
        String provider = txtPName.getText();
        String sql1 = "SELECT ID FROM provider where Name = '" + provider + "'";
        String PID = g.getData(sql1);
        
        if(PID.equals("") || provider.equals(""))
        {
            JOptionPane.showMessageDialog(null, "اسم المزود غير موجود الرجاء اضافته");
            txtPName.setText("");
            return;
        }
        
        String date = txtDate.getText();
        //int Debt = Integer.parseInt(txtDebt.getText().replace(",", ""));
        
        String debt = txtDebt.getText().replace(",", "");
        String paid = txtPaidPrice.getText().replace(",", "");
        String totalPrice= txtTotal.getText().replace(",", "");
        
        if(paid.equals(""))
        {
            JOptionPane.showMessageDialog(null, "الرجاء ملئ حقل الواصل");
        }
        else
        {
            
            String sql2 = "SELECT max(ID)+1 FROM importt";
            String importID = g.getData(sql2);
            if(importID == null)
            {
                importID = "1";
            }
            
//            String sql = "SELECT dollar FROM setting";
//            String dollar = go.getData(sql);
//            int d = Integer.parseInt(dollar.replace(".0", ""));
            
//            int debt = Debt * d;
//            int paid = Integer.parseInt(Paid) * d;
//            int totalPrice = Integer.parseInt(TotalPrice) * d;
            
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            int r = model.getRowCount();
            Object data[];
            
            for (int i = 0; i < r; i++) 
            {
                data = new Object[6];
                for (int j = 0; j < 6; j++) 
                {
                    data[j] = model.getValueAt(i, j);
                }
                
                String sql3 = "SELECT ID FROM material where Name = '" + data[5] + "'";
                String mid = go.getData(sql3);
                String data2 = data[2].toString().replace(",", "").replace("$ ", "");
                
                if(mid.equals(""))
                {
                    String sql4 = "INSERT INTO material(Name,Type,Quantity,Price,Guarantee,WarehouseName) VALUES "
                    + "('"+ data[5] + "','" + data[4] + "','" + data[3] + "','" + data2 + "','" + data[1] + "','" + data[0] + "')";
                    g.query(sql4);
                    
                    String sql5 = "SELECT ID FROM material where Name = '" + data[5] + "'";
                    String Mid = go.getData(sql5);
                    
                    String sql6 = "INSERT INTO importtitem(ImportID,MateriaID,Quantity,Price) VALUES "
                    + "('"+ importID + "','" + Mid + "','" + data[3] + "','" + data2 + "')";
                    g.query(sql6);
                }
                else
                {
                    String sql4 = "INSERT INTO importtitem(ImportID,MateriaID,Quantity,Price) VALUES "
                    + "('"+ importID + "','" + mid + "','" + data[3] + "','" + data2 + "')";
                    g.query(sql4);

                    String sql5 = "UPDATE material SET Quantity=Quantity +'" + data[3] + "',Price='" + data2 + "',Guarantee='" + data[1] + "' WHERE ID ='" + mid +"'";
                    g.query(sql5);
                }
            }
            
            //الاضافة في جدول الواردات
            String sql6 = "INSERT INTO importt(ProviderID , TotalPrice, PaidPrice, Debt, Date) VALUES "
                + "('" + PID + "','" + totalPrice + "','" + paid + "','" + debt + "','" + date + "')";
            g.query(sql6);
            
            //اضافة الديون للزبون
            String sql7 = "UPDATE provider SET Debt = Debt + '" + debt + "' WHERE ID ='" + PID +"'";
            g.query(sql7);
            
            JOptionPane.showMessageDialog(null, "تمت العملية بنجاح");
            
            resetDate();
            
        }
    }//GEN-LAST:event_btnBuyActionPerformed

    private void txtPNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPNameKeyReleased
        if(!txtPName.getText().equals(""))
        {
            if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE)
            {

            }
            else
            {    
                String complete = "";
                String pname = txtPName.getText();
                int start = pname.length();
                int last = pname.length();

                for (int i = 0; i < Pname.size(); i++) 
                {
                    if(Pname.get(i).toString().startsWith(txtPName.getText()))
                    {
                        complete = Pname.get(i).toString();
                        last = complete.length();
                        break;
                    }
                }
                    //System.out.print(check_from_data);
                if(last > start)
                {
                    //System.out.print("Found");
                    txtPName.setText(complete);
                    txtPName.setCaretPosition(last);
                    txtPName.moveCaretPosition(start);
                }   
            } 
        }
    }//GEN-LAST:event_txtPNameKeyReleased

    private void txtMNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMNameKeyReleased
        if(!txtMName.getText().equals(""))
        {
            if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE)
            {

            }
            else
            {    
                String complete = "";
                String pname = txtMName.getText();
                int start = pname.length();
                int last = pname.length();
                for (int i = 0; i < Mname.size(); i++) 
                {
                    if(Mname.get(i).toString().startsWith(txtMName.getText()))
                    {

                        complete = Mname.get(i).toString();
                        last = complete.length();
                        break;
                    }
                }
                    //System.out.print(check_from_data);
                if(last > start)
                {
                    //System.out.print("Found");
                    txtMName.setText(complete);
                    txtMName.setCaretPosition(last);
                    txtMName.moveCaretPosition(start);
                }   
            } 
        }
    }//GEN-LAST:event_txtMNameKeyReleased

    private void txtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusLost
        
        String quant = txtPrice.getText().replace(",", "");
        
        if(!quant.equals(""))
        {
            float quan = Float.parseFloat(quant);
            String comma = String.format ("%,.0f", quan);
            txtPrice.setText(comma);
        }
        
    }//GEN-LAST:event_txtPriceFocusLost

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        jPanel3.requestFocus();
        
        tblInfo.clearSelection();
            
        deleteID = -1;
    }//GEN-LAST:event_jPanel3MouseClicked

    private void txtPaidPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidPriceFocusLost
        String paid = txtPaidPrice.getText().replace(",", "");
        
        if(!paid.equals(""))
        {
            float quan = Float.parseFloat(paid);
            String comma = String.format ("%,.0f", quan);
            txtPaidPrice.setText(comma);
        }
    }//GEN-LAST:event_txtPaidPriceFocusLost

    private void txtPNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPNameFocusGained
        getProviderData();
    }//GEN-LAST:event_txtPNameFocusGained

    private void txtMNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMNameFocusGained
        getMaterialData();
    }//GEN-LAST:event_txtMNameFocusGained

    private void txtPaidPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidPriceKeyReleased
        String p = txtPaidPrice.getText().replace(",", "");
        
        if(!p.equals(""))
        {
            if(!Character.isDigit(p.charAt(p.length()-1)))
            {
                txtPaidPrice.setText(""+txtPaidPrice.getText().substring(0, txtPaidPrice.getText().length()- 1));
                return;
            }
            if(!Character.isDigit(p.charAt(0)))
            {
                txtPaidPrice.setText(""+txtPaidPrice.getText().substring(1));
                return;
            }
            
            float paid = Float.parseFloat(p);
        
            double debt = 0;
            double total = Double.parseDouble(txtTotal.getText().replace(",", ""));
            if(txtPaidPrice.getText().equals("0"))
            {
                debt = total;
            }
            else
            {
                debt = total - paid;
            }

            String d = String.format ("%,.0f", debt); //حذف E 
            txtDebt.setText(String.valueOf(d));
        }
        else
        {
            txtDebt.setText("0");
        }
    }//GEN-LAST:event_txtPaidPriceKeyReleased

    private void txtQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyReleased
        if(!txtQuantity.getText().equals(""))
        {
            if(!Character.isDigit(txtQuantity.getText().charAt(txtQuantity.getText().length()-1)))
            {
                txtQuantity.setText(""+txtQuantity.getText().substring(0, txtQuantity.getText().length()- 1));
                return;
            }
            if(!Character.isDigit(txtQuantity.getText().charAt(0)))
            {
                txtQuantity.setText(""+txtQuantity.getText().substring(1));
            }
        }
    }//GEN-LAST:event_txtQuantityKeyReleased

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        if(!txtPrice.getText().equals(""))
        {
            if(!Character.isDigit(txtPrice.getText().charAt(txtPrice.getText().length()-1)))
            {
                txtPrice.setText(""+txtPrice.getText().substring(0, txtPrice.getText().length()- 1));
                return;
            }
            if(!Character.isDigit(txtPrice.getText().charAt(0)))
            {
                txtPrice.setText(""+txtPrice.getText().substring(1));
            }
        }
    }//GEN-LAST:event_txtPriceKeyReleased

    private void btnDeleteInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteInfoActionPerformed

        if(deleteID == -1)
        {
            JOptionPane.showMessageDialog(null, "الرجاء تحديد العنصر المراد حذفه");
        }
        else
        {
            
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            int price = Integer.parseInt(model.getValueAt(row, 2).toString().replace(",", "").replace("$ ", ""));
            int quant = Integer.parseInt(model.getValueAt(row, 3).toString());
            model.removeRow(row);
            tblInfo.setModel(model);
            
            int totalNum = Integer.parseInt(txtTotal.getText().replace(",", ""));
            float result = totalNum - price *quant;
            String TotalWithOutE = String.format ("%,.0f", result);
            
            txtTotal.setText(TotalWithOutE);
            txtMName.setText("");
            cmbGrop.setSelectedIndex(0);
            txtPrice.setText("");
            txtQuantity.setText("");
            txtGuarantee.setText("");
            txtMName.requestFocus();
            tblInfo.clearSelection();
                
            deleteID = -1;
        }

    }//GEN-LAST:event_btnDeleteInfoActionPerformed

    private void btnEditInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditInfoActionPerformed
        if(deleteID == -1)
        {
            JOptionPane.showMessageDialog(null, "الرجاء تحديد العنصر المراد تعديله");
        }
        else
        {
            String material = txtMName.getText();
            String type = cmbGrop.getSelectedItem().toString();
            String price = txtPrice.getText();
            String quantity = txtQuantity.getText();
            String guarentee = txtGuarantee.getText();
            String warehouse = cmbWarehouse.getSelectedItem().toString();

            if(material.equals("") || price.equals("") || quantity.equals(""))
            {
                JOptionPane.showMessageDialog(null, "الرجاء اكمال الحقول");
            }
            else
            {
                DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
                String number = model.getValueAt(row, 6).toString();

                //Object row[] = {,txtPrice.getText(),txtMName.getText(),number};
                model.setValueAt(material, row, 5);
                model.setValueAt(type, row, 4);
                model.setValueAt(quantity, row, 3);
                model.setValueAt("$ ".concat(price), row, 2);
                model.setValueAt(guarentee, row, 1);
                model.setValueAt(warehouse, row, 0);
                tblInfo.setModel(model);

                int p = 0;
                int q = 0;
                float result = 0;
                for (int i = 0; i < tblInfo.getRowCount(); i++) {
                    p = Integer.parseInt(model.getValueAt(i, 2).toString().replace(",", "").replace("$ ", "")); //السعر من الجدول
                    q = Integer.parseInt(model.getValueAt(i, 3).toString()); //الكمية
                    result += q * p;
                }
                String TotalWithOutE = String.format("%,.0f", result);
                txtTotal.setText(TotalWithOutE);
                
                txtMName.setText("");
                cmbGrop.setSelectedIndex(0);
                txtPrice.setText("");
                txtQuantity.setText("");
                txtGuarantee.setText("");
                txtMName.requestFocus();
                tblInfo.clearSelection();

                deleteID = -1;
            }
        }
    }//GEN-LAST:event_btnEditInfoActionPerformed

    private void tblInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInfoMouseClicked
        
        if(tblInfo.getSelectedRow() != -1)
        { 
            row = tblInfo.getSelectedRow();
            DefaultTableModel model=(DefaultTableModel)tblInfo.getModel();
            deleteID = row + 1;
            String warehouse = model.getValueAt(row, 0).toString();
            String guarentee = model.getValueAt(row, 1).toString();
            String price = tblInfo.getValueAt(row, 2).toString().replace("$ ", "");
            String quantity = tblInfo.getValueAt(row, 3).toString();
            String type = tblInfo.getValueAt(row, 4).toString();
            String MName = tblInfo.getValueAt(row, 5).toString();

            txtMName.setText(MName);
            cmbGrop.setSelectedItem(type);
            txtPrice.setText(price);
            txtQuantity.setText(quantity);
            txtGuarantee.setText(guarentee);
            cmbWarehouse.setSelectedItem(warehouse);
        }
        else
        {
            deleteID = -1;
        }
    }//GEN-LAST:event_tblInfoMouseClicked

    private void cmbGropFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbGropFocusGained
        fillComboBox();
    }//GEN-LAST:event_cmbGropFocusGained

    private void txtMNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMNameFocusLost
        String name = txtMName.getText();
        if(!name.equals(""))
        {
            String sql1 = "SELECT ID, Price, Quantity, Type, Guarantee, WarehouseName FROM material WHERE Name ='" + name + "'";
            String[] info = go.GetInformation(sql1, 6);
            
            String id = info[0];
            if(id != null)
            {
                float price = Float.parseFloat(info[1]);
                String quantity = info[2];
                String type = info[3];
                String guarantee = info[4];
                String warehouse = info[5];
               
                cmbGrop.setSelectedItem(type);
                
                String comma = String.format ("%,.0f", price);
                txtPrice.setText(comma);
               
                txtQuantity.setText(quantity);
                
                cmbWarehouse.setSelectedItem(warehouse);
                
                txtGuarantee.setText(guarantee);
            }
        }
    }//GEN-LAST:event_txtMNameFocusLost

    private void cmbWarehouseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbWarehouseFocusGained
        cmbWarehouse.removeAllItems();
        String sql = "SELECT * FROM warehouse";
        g.fillCombo(cmbWarehouse,sql);
    }//GEN-LAST:event_cmbWarehouseFocusGained

    private void btnAddWarehouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWarehouseActionPerformed
        new AddWarehouse().setVisible(true);
    }//GEN-LAST:event_btnAddWarehouseActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        new AddType().setVisible(true);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void txtPNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPNameFocusLost
        String name = txtPName.getText();
        if(!name.equals(""))
        {
            String sql = "SELECT ID FROM provider WHERE Name = '" + name + "'";
            String id = go.getData(sql);
            if(id.equals(""))
            {
                JOptionPane.showMessageDialog(null, "اسم المزود غير موجود");
                txtPName.setText("");
                txtPName.requestFocus();
            }
        }
    }//GEN-LAST:event_txtPNameFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInfo;
    private javax.swing.JButton btnAddWarehouse;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnDeleteInfo;
    private javax.swing.JButton btnEditInfo;
    private javax.swing.JComboBox<String> cmbGrop;
    private javax.swing.JComboBox<String> cmbWarehouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInfo;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDebt;
    private javax.swing.JTextField txtGuarantee;
    private javax.swing.JTextField txtMName;
    private javax.swing.JTextField txtPName;
    private javax.swing.JTextField txtPaidPrice;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
